// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240527170714_SeedMoreData")]
    partial class SeedMoreData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "02b32b52-795e-4fe4-bd1b-03b2d2eaecbf",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9f44658f-284a-4fd7-9069-674a570a9e69",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("api.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("api.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("StockId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("api.Models.CompanyBalanceSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcceptedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AccountPayables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccumulatedOtherComprehensiveIncomeLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CIK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CapitalLeaseObligations")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAndCashEquivalents")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAndShortTermInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CommonStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DeferredRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DeferredRevenueNonCurrent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DeferredTaxLiabilitiesNonCurrent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FillingDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Goodwill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GoodwillAndIntangibleAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IntangibleAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Inventory")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LongTermDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LongTermInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinorityInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetReceivables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherCurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherCurrentLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherNonCurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherNonCurrentLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherTotalStockholdersEquity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PreferredStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PropertyPlantEquipmentNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReportedCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RetainedEarnings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShortTermDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShortTermInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TaxAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxPayables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCurrentLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalEquity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLiabilitiesAndStockholdersEquity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLiabilitiesAndTotalEquity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalNonCurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalNonCurrentLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalStockholdersEquity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("companyBalanceSheets");
                });

            modelBuilder.Entity("api.Models.CompanyCashFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcceptedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AccountsPayables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccountsReceivables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AcquisitionsNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CIK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CapitalExpenditure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAtBeginningOfPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAtEndOfPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChangeInWorkingCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CommonStockIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CommonStockRepurchased")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DebtRepayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DeferredIncomeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DepreciationAndAmortization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DividendsPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EffectOfForexChangesOnCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FillingDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FreeCashFlow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Inventory")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvestmentsInPropertyPlantAndEquipment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetCashProvidedByOperatingActivities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetCashUsedForInvestingActivities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetCashUsedProvidedByFinancingActivities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetChangeInCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingCashFlow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherFinancingActivities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherInvestingActivities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherNonCashItems")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherWorkingCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PurchasesOfInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReportedCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalesMaturitiesOfInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StockBasedCompensation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("companyCashFlows");
                });

            modelBuilder.Entity("api.Models.CompanyIncomeStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcceptedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostAndExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostOfRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DepreciationAndAmortization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EBITDA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EBITDARatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EPS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EPSDiluted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FillingDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GeneralAndAdministrativeExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossProfitRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeBeforeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeBeforeTaxRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeTaxExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InterestExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InterestIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetIncomeRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingIncomeRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportedCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ResearchAndDevelopmentExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingAndMarketingExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingGeneralAndAdministrativeExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalOtherIncomeExpensesNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightedAverageShsOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightedAverageShsOutDil")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("companyIncomeStatements");
                });

            modelBuilder.Entity("api.Models.CompanyKeyMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageInventoryTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AveragePayablesTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageReceivablesTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BookValuePerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CapexPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CapexToDepreciationTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CapexToOperatingCashFlowTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CapexToRevenueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DaysOfInventoryOnHandTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DaysPayablesOutstandingTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DaysSalesOutstandingTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebtToAssetsTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebtToEquityTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebtToMarketCapTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DividendPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DividendYieldPercentageTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DividendYieldTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EarningsYieldTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EnterpriseValueOverEBITDATTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EnterpriseValueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EvToFreeCashFlowTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EvToOperatingCashFlowTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EvToSalesTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeCashFlowPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeCashFlowYieldTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrahamNetNetTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrahamNumberTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeQualityTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IntangiblesToTotalAssetsTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestCoverageTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestDebtPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InventoryTurnoverTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvestedCapitalTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MarketCapTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetCurrentAssetValueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetDebtToEBITDATTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetIncomePerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingCashFlowPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PayablesTurnoverTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PayoutRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PbRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PeRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfcfRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PocfratioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceToSalesRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PtbRatioTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivablesTurnoverTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResearchAndDevelopementToRevenueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReturnOnTangibleAssetsTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RevenuePerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RoeTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RoicTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesGeneralAndAdministrativeToRevenueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShareholdersEquityPerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockBasedCompensationToRevenueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TangibleAssetValueTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TangibleBookValuePerShareTTM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkingCapitalTTM")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("companyKeyMetrics");
                });

            modelBuilder.Entity("api.Models.CompanyTenK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcceptedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("companyTenKs");
                });

            modelBuilder.Entity("api.Models.Portfolio", b =>
                {
                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("AppUserID", "StockId");

                    b.HasIndex("StockId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("api.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastDiv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MarketCap")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Purchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.Comment", b =>
                {
                    b.HasOne("api.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("api.Models.Stock", "Stock")
                        .WithMany("Comments")
                        .HasForeignKey("StockId");

                    b.Navigation("AppUser");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("api.Models.Portfolio", b =>
                {
                    b.HasOne("api.Models.AppUser", "AppUser")
                        .WithMany("portfolios")
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Stock", "Stock")
                        .WithMany("Portfolios")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("api.Models.AppUser", b =>
                {
                    b.Navigation("portfolios");
                });

            modelBuilder.Entity("api.Models.Stock", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Portfolios");
                });
#pragma warning restore 612, 618
        }
    }
}
